%!PS-Adobe-2.0
%%Title: t23.eps
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Mon Apr 29 17:48:04 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (t23.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 29 17:48:04 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
1078 704 M
63 0 V
5662 0 R
-63 0 V
stroke
946 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
1.000 UL
LTb
LCb setrgbcolor
1078 1116 M
63 0 V
5662 0 R
-63 0 V
stroke
946 1116 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 20)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 1527 M
63 0 V
5662 0 R
-63 0 V
stroke
946 1527 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 40)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 1939 M
63 0 V
5662 0 R
-63 0 V
stroke
946 1939 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 60)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 2350 M
63 0 V
5662 0 R
-63 0 V
stroke
946 2350 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 80)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 2762 M
63 0 V
5662 0 R
-63 0 V
stroke
946 2762 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 3173 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3173 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 120)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 3585 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3585 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 140)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 3996 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3996 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 160)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 4408 M
63 0 V
5662 0 R
-63 0 V
stroke
946 4408 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 180)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 4819 M
63 0 V
5662 0 R
-63 0 V
stroke
946 4819 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1078 704 M
0 63 V
0 4052 R
0 -63 V
stroke
1078 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1714 704 M
0 63 V
0 4052 R
0 -63 V
stroke
1714 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.62)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2350 704 M
0 63 V
0 4052 R
0 -63 V
stroke
2350 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.64)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2986 704 M
0 63 V
0 4052 R
0 -63 V
stroke
2986 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.66)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3622 704 M
0 63 V
0 4052 R
0 -63 V
stroke
3622 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.68)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4259 704 M
0 63 V
0 4052 R
0 -63 V
stroke
4259 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.7)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4895 704 M
0 63 V
0 4052 R
0 -63 V
stroke
4895 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.72)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5531 704 M
0 63 V
0 4052 R
0 -63 V
stroke
5531 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.74)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6167 704 M
0 63 V
0 4052 R
0 -63 V
stroke
6167 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.76)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6803 704 M
0 63 V
0 4052 R
0 -63 V
stroke
6803 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.78)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4819 M
0 -4115 V
5725 0 V
0 4115 R
-5725 0 R
1.000 UP
stroke
LTb
LCb setrgbcolor
LCb setrgbcolor
198 2761 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (freq)]
] -73.3 MCshow
grestore
/Helvetica findfont 220 scalefont setfont
LTb
LCb setrgbcolor
3940 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (angle in radians)]
] -73.3 MCshow
/Helvetica findfont 220 scalefont setfont
LTb
% Begin plot #1
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
5816 4646 M
[ [(Symbol) 220.0 0.0 true true 0 (q)]
[(Helvetica) 176.0 -66.0 true true 0 (23)]
] -51.3 MRshow
/Helvetica findfont 220 scalefont setfont
1.000 UL
LTb
0.58 0.00 0.83 C
1.000 5948 4591 591 110 BoxColFill
1.000 1666 704 65 42 BoxColFill
1.000 1730 704 65 22 BoxColFill
1.000 1794 704 48 22 BoxColFill
1.000 1841 704 33 22 BoxColFill
1.000 1873 704 49 22 BoxColFill
1.000 1921 704 49 22 BoxColFill
1.000 1969 704 32 22 BoxColFill
1.000 2000 704 33 22 BoxColFill
1.000 2032 704 33 42 BoxColFill
1.000 2064 704 33 63 BoxColFill
1.000 2096 704 33 22 BoxColFill
1.000 2128 704 32 63 BoxColFill
1.000 2159 704 49 42 BoxColFill
1.000 2207 704 49 63 BoxColFill
1.000 2255 704 33 124 BoxColFill
1.000 2287 704 32 83 BoxColFill
1.000 2318 704 33 83 BoxColFill
1.000 2350 704 33 145 BoxColFill
1.000 2382 704 33 145 BoxColFill
1.000 2414 704 33 207 BoxColFill
1.000 2446 704 32 248 BoxColFill
1.000 2477 704 33 124 BoxColFill
1.000 2509 704 33 248 BoxColFill
1.000 2541 704 33 207 BoxColFill
1.000 2573 704 33 371 BoxColFill
1.000 2605 704 32 310 BoxColFill
1.000 2636 704 33 166 BoxColFill
1.000 2668 704 33 371 BoxColFill
1.000 2700 704 33 289 BoxColFill
1.000 2732 704 33 577 BoxColFill
1.000 2764 704 32 433 BoxColFill
1.000 2795 704 33 454 BoxColFill
1.000 2827 704 33 515 BoxColFill
1.000 2859 704 33 701 BoxColFill
1.000 2891 704 33 371 BoxColFill
1.000 2923 704 33 598 BoxColFill
1.000 2955 704 32 598 BoxColFill
1.000 2986 704 33 906 BoxColFill
1.000 3018 704 33 680 BoxColFill
1.000 3050 704 33 659 BoxColFill
1.000 3082 704 33 886 BoxColFill
1.000 3114 704 32 989 BoxColFill
1.000 3145 704 33 824 BoxColFill
1.000 3177 704 33 1091 BoxColFill
1.000 3209 704 33 1256 BoxColFill
1.000 3241 704 33 1359 BoxColFill
1.000 3273 704 32 1462 BoxColFill
1.000 3304 704 33 1421 BoxColFill
1.000 3336 704 33 1565 BoxColFill
1.000 3368 704 33 1914 BoxColFill
1.000 3400 704 33 1441 BoxColFill
1.000 3432 704 32 1935 BoxColFill
1.000 3463 704 33 2100 BoxColFill
1.000 3495 704 33 1956 BoxColFill
1.000 3527 704 33 1976 BoxColFill
1.000 3559 704 33 2305 BoxColFill
1.000 3591 704 32 2038 BoxColFill
1.000 3622 704 33 2223 BoxColFill
1.000 3654 704 33 2676 BoxColFill
1.000 3686 704 33 2264 BoxColFill
1.000 3718 704 33 2408 BoxColFill
1.000 3750 704 32 2573 BoxColFill
1.000 3781 704 33 2964 BoxColFill
1.000 3813 704 33 2388 BoxColFill
1.000 3845 704 33 2737 BoxColFill
1.000 3877 704 33 2737 BoxColFill
1.000 3909 704 32 2923 BoxColFill
1.000 3940 704 33 3046 BoxColFill
1.000 3972 704 33 3128 BoxColFill
1.000 4004 704 33 3108 BoxColFill
1.000 4036 704 33 3211 BoxColFill
1.000 4068 704 33 3005 BoxColFill
1.000 4100 704 32 3478 BoxColFill
1.000 4131 704 33 3643 BoxColFill
1.000 4163 704 33 3252 BoxColFill
1.000 4195 704 33 3663 BoxColFill
1.000 4227 704 33 3787 BoxColFill
1.000 4259 704 32 3849 BoxColFill
1.000 4290 704 33 3416 BoxColFill
1.000 4322 704 33 2923 BoxColFill
1.000 4354 704 33 3499 BoxColFill
1.000 4386 704 33 3149 BoxColFill
1.000 4418 704 32 3663 BoxColFill
1.000 4449 704 33 3355 BoxColFill
1.000 4481 704 33 3519 BoxColFill
1.000 4513 704 33 3416 BoxColFill
1.000 4545 704 33 3643 BoxColFill
1.000 4577 704 32 3067 BoxColFill
1.000 4608 704 33 3314 BoxColFill
1.000 4640 704 33 3128 BoxColFill
1.000 4672 704 33 3334 BoxColFill
1.000 4704 704 33 2984 BoxColFill
1.000 4736 704 32 2861 BoxColFill
1.000 4767 704 33 3375 BoxColFill
1.000 4799 704 33 2696 BoxColFill
1.000 4831 704 33 2367 BoxColFill
1.000 4863 704 33 2758 BoxColFill
1.000 4895 704 32 2532 BoxColFill
1.000 4926 704 33 2347 BoxColFill
1.000 4958 704 33 2182 BoxColFill
1.000 4990 704 33 2593 BoxColFill
1.000 5022 704 33 2161 BoxColFill
1.000 5054 704 32 2120 BoxColFill
1.000 5085 704 33 1832 BoxColFill
1.000 5117 704 33 2100 BoxColFill
1.000 5149 704 33 2326 BoxColFill
1.000 5181 704 33 1894 BoxColFill
1.000 5213 704 33 1462 BoxColFill
1.000 5245 704 32 1544 BoxColFill
1.000 5276 704 33 1626 BoxColFill
1.000 5308 704 33 1400 BoxColFill
1.000 5340 704 33 1380 BoxColFill
1.000 5372 704 33 1297 BoxColFill
1.000 5404 704 32 1009 BoxColFill
1.000 5435 704 33 1256 BoxColFill
1.000 5467 704 33 1009 BoxColFill
1.000 5499 704 33 989 BoxColFill
1.000 5531 704 33 762 BoxColFill
1.000 5563 704 32 886 BoxColFill
1.000 5594 704 33 515 BoxColFill
1.000 5626 704 33 865 BoxColFill
1.000 5658 704 33 927 BoxColFill
1.000 5690 704 33 742 BoxColFill
1.000 5722 704 32 515 BoxColFill
1.000 5753 704 33 557 BoxColFill
1.000 5785 704 33 577 BoxColFill
1.000 5817 704 33 330 BoxColFill
1.000 5849 704 33 268 BoxColFill
1.000 5881 704 32 392 BoxColFill
1.000 5912 704 33 351 BoxColFill
1.000 5944 704 33 289 BoxColFill
1.000 5976 704 33 433 BoxColFill
1.000 6008 704 33 371 BoxColFill
1.000 6040 704 32 145 BoxColFill
1.000 6071 704 33 207 BoxColFill
1.000 6103 704 33 248 BoxColFill
1.000 6135 704 33 104 BoxColFill
1.000 6167 704 33 186 BoxColFill
1.000 6199 704 32 145 BoxColFill
1.000 6230 704 33 104 BoxColFill
1.000 6262 704 33 63 BoxColFill
1.000 6294 704 33 145 BoxColFill
1.000 6326 704 33 42 BoxColFill
1.000 6358 704 33 83 BoxColFill
1.000 6390 704 32 22 BoxColFill
1.000 6421 704 33 42 BoxColFill
1.000 6453 704 33 42 BoxColFill
1.000 6485 704 33 83 BoxColFill
1.000 6517 704 64 22 BoxColFill
1.000 6580 704 65 22 BoxColFill
1.000 6644 704 33 63 BoxColFill
1.000 6676 704 33 42 BoxColFill
1.000 6708 704 32 42 BoxColFill
1.000 6739 704 33 22 BoxColFill
1.000 6771 704 17 22 BoxColFill
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4819 M
0 -4115 V
5725 0 V
0 4115 R
-5725 0 R
1.000 UP
stroke
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
